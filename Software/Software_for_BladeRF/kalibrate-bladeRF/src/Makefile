# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/kal
pkgincludedir = $(includedir)/kal
pkglibdir = $(libdir)/kal
pkglibexecdir = $(libexecdir)/kal
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = kal$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_kal_OBJECTS = kal-arfcn_freq.$(OBJEXT) kal-c0_detect.$(OBJEXT) \
	kal-circular_buffer.$(OBJEXT) kal-fcch_detector.$(OBJEXT) \
	kal-kal.$(OBJEXT) kal-offset.$(OBJEXT) \
	kal-bladeRF_source.$(OBJEXT) kal-util.$(OBJEXT)
kal_OBJECTS = $(am_kal_OBJECTS)
am__DEPENDENCIES_1 =
kal_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
kal_LINK = $(CXXLD) $(kal_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(kal_SOURCES)
DIST_SOURCES = $(kal_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/haison98/kalibrate-bladeRF/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/haison98/kalibrate-bladeRF/missing autoconf
AUTOHEADER = ${SHELL} /home/haison98/kalibrate-bladeRF/missing autoheader
AUTOMAKE = ${SHELL} /home/haison98/kalibrate-bladeRF/missing automake-1.15
AWK = mawk
BLADERF_CFLAGS = 
BLADERF_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FFTW3_CFLAGS = 
FFTW3_LIBS = -lfftw3
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/haison98/kalibrate-bladeRF/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = kal
PACKAGE_BUGREPORT = jl@thre.at
PACKAGE_NAME = kalibrate
PACKAGE_STRING = kalibrate 0.4.1
PACKAGE_TARNAME = kal
PACKAGE_URL = 
PACKAGE_VERSION = 0.4.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POW_LIB = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.4.1
abs_builddir = /home/haison98/kalibrate-bladeRF/src
abs_srcdir = /home/haison98/kalibrate-bladeRF/src
abs_top_builddir = /home/haison98/kalibrate-bladeRF
abs_top_srcdir = /home/haison98/kalibrate-bladeRF
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/haison98/kalibrate-bladeRF/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
USRP_LIBS = -lbladeRF
kal_SOURCES = \
   arfcn_freq.cc \
   c0_detect.cc	 \
   circular_buffer.cc \
   fcch_detector.cc \
   kal.cc \
   offset.cc \
   bladeRF_source.cc \
   util.cc\
   arfcn_freq.h \
   c0_detect.h \
   circular_buffer.h \
   fcch_detector.h \
   offset.h \
   bladeRF_complex.h \
   bladeRF_source.h \
   util.h\
   version.h

kal_CXXFLAGS = $(FFTW3_CFLAGS) $(USRP_CFLAGS)
kal_LDADD = $(FFTW3_LIBS) $(USRP_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

kal$(EXEEXT): $(kal_OBJECTS) $(kal_DEPENDENCIES) $(EXTRA_kal_DEPENDENCIES) 
	@rm -f kal$(EXEEXT)
	$(AM_V_CXXLD)$(kal_LINK) $(kal_OBJECTS) $(kal_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/kal-arfcn_freq.Po
include ./$(DEPDIR)/kal-bladeRF_source.Po
include ./$(DEPDIR)/kal-c0_detect.Po
include ./$(DEPDIR)/kal-circular_buffer.Po
include ./$(DEPDIR)/kal-fcch_detector.Po
include ./$(DEPDIR)/kal-kal.Po
include ./$(DEPDIR)/kal-offset.Po
include ./$(DEPDIR)/kal-util.Po

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

kal-arfcn_freq.o: arfcn_freq.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-arfcn_freq.o -MD -MP -MF $(DEPDIR)/kal-arfcn_freq.Tpo -c -o kal-arfcn_freq.o `test -f 'arfcn_freq.cc' || echo '$(srcdir)/'`arfcn_freq.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-arfcn_freq.Tpo $(DEPDIR)/kal-arfcn_freq.Po
#	$(AM_V_CXX)source='arfcn_freq.cc' object='kal-arfcn_freq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-arfcn_freq.o `test -f 'arfcn_freq.cc' || echo '$(srcdir)/'`arfcn_freq.cc

kal-arfcn_freq.obj: arfcn_freq.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-arfcn_freq.obj -MD -MP -MF $(DEPDIR)/kal-arfcn_freq.Tpo -c -o kal-arfcn_freq.obj `if test -f 'arfcn_freq.cc'; then $(CYGPATH_W) 'arfcn_freq.cc'; else $(CYGPATH_W) '$(srcdir)/arfcn_freq.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-arfcn_freq.Tpo $(DEPDIR)/kal-arfcn_freq.Po
#	$(AM_V_CXX)source='arfcn_freq.cc' object='kal-arfcn_freq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-arfcn_freq.obj `if test -f 'arfcn_freq.cc'; then $(CYGPATH_W) 'arfcn_freq.cc'; else $(CYGPATH_W) '$(srcdir)/arfcn_freq.cc'; fi`

kal-c0_detect.o: c0_detect.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-c0_detect.o -MD -MP -MF $(DEPDIR)/kal-c0_detect.Tpo -c -o kal-c0_detect.o `test -f 'c0_detect.cc' || echo '$(srcdir)/'`c0_detect.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-c0_detect.Tpo $(DEPDIR)/kal-c0_detect.Po
#	$(AM_V_CXX)source='c0_detect.cc' object='kal-c0_detect.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-c0_detect.o `test -f 'c0_detect.cc' || echo '$(srcdir)/'`c0_detect.cc

kal-c0_detect.obj: c0_detect.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-c0_detect.obj -MD -MP -MF $(DEPDIR)/kal-c0_detect.Tpo -c -o kal-c0_detect.obj `if test -f 'c0_detect.cc'; then $(CYGPATH_W) 'c0_detect.cc'; else $(CYGPATH_W) '$(srcdir)/c0_detect.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-c0_detect.Tpo $(DEPDIR)/kal-c0_detect.Po
#	$(AM_V_CXX)source='c0_detect.cc' object='kal-c0_detect.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-c0_detect.obj `if test -f 'c0_detect.cc'; then $(CYGPATH_W) 'c0_detect.cc'; else $(CYGPATH_W) '$(srcdir)/c0_detect.cc'; fi`

kal-circular_buffer.o: circular_buffer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-circular_buffer.o -MD -MP -MF $(DEPDIR)/kal-circular_buffer.Tpo -c -o kal-circular_buffer.o `test -f 'circular_buffer.cc' || echo '$(srcdir)/'`circular_buffer.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-circular_buffer.Tpo $(DEPDIR)/kal-circular_buffer.Po
#	$(AM_V_CXX)source='circular_buffer.cc' object='kal-circular_buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-circular_buffer.o `test -f 'circular_buffer.cc' || echo '$(srcdir)/'`circular_buffer.cc

kal-circular_buffer.obj: circular_buffer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-circular_buffer.obj -MD -MP -MF $(DEPDIR)/kal-circular_buffer.Tpo -c -o kal-circular_buffer.obj `if test -f 'circular_buffer.cc'; then $(CYGPATH_W) 'circular_buffer.cc'; else $(CYGPATH_W) '$(srcdir)/circular_buffer.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-circular_buffer.Tpo $(DEPDIR)/kal-circular_buffer.Po
#	$(AM_V_CXX)source='circular_buffer.cc' object='kal-circular_buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-circular_buffer.obj `if test -f 'circular_buffer.cc'; then $(CYGPATH_W) 'circular_buffer.cc'; else $(CYGPATH_W) '$(srcdir)/circular_buffer.cc'; fi`

kal-fcch_detector.o: fcch_detector.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-fcch_detector.o -MD -MP -MF $(DEPDIR)/kal-fcch_detector.Tpo -c -o kal-fcch_detector.o `test -f 'fcch_detector.cc' || echo '$(srcdir)/'`fcch_detector.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-fcch_detector.Tpo $(DEPDIR)/kal-fcch_detector.Po
#	$(AM_V_CXX)source='fcch_detector.cc' object='kal-fcch_detector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-fcch_detector.o `test -f 'fcch_detector.cc' || echo '$(srcdir)/'`fcch_detector.cc

kal-fcch_detector.obj: fcch_detector.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-fcch_detector.obj -MD -MP -MF $(DEPDIR)/kal-fcch_detector.Tpo -c -o kal-fcch_detector.obj `if test -f 'fcch_detector.cc'; then $(CYGPATH_W) 'fcch_detector.cc'; else $(CYGPATH_W) '$(srcdir)/fcch_detector.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-fcch_detector.Tpo $(DEPDIR)/kal-fcch_detector.Po
#	$(AM_V_CXX)source='fcch_detector.cc' object='kal-fcch_detector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-fcch_detector.obj `if test -f 'fcch_detector.cc'; then $(CYGPATH_W) 'fcch_detector.cc'; else $(CYGPATH_W) '$(srcdir)/fcch_detector.cc'; fi`

kal-kal.o: kal.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-kal.o -MD -MP -MF $(DEPDIR)/kal-kal.Tpo -c -o kal-kal.o `test -f 'kal.cc' || echo '$(srcdir)/'`kal.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-kal.Tpo $(DEPDIR)/kal-kal.Po
#	$(AM_V_CXX)source='kal.cc' object='kal-kal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-kal.o `test -f 'kal.cc' || echo '$(srcdir)/'`kal.cc

kal-kal.obj: kal.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-kal.obj -MD -MP -MF $(DEPDIR)/kal-kal.Tpo -c -o kal-kal.obj `if test -f 'kal.cc'; then $(CYGPATH_W) 'kal.cc'; else $(CYGPATH_W) '$(srcdir)/kal.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-kal.Tpo $(DEPDIR)/kal-kal.Po
#	$(AM_V_CXX)source='kal.cc' object='kal-kal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-kal.obj `if test -f 'kal.cc'; then $(CYGPATH_W) 'kal.cc'; else $(CYGPATH_W) '$(srcdir)/kal.cc'; fi`

kal-offset.o: offset.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-offset.o -MD -MP -MF $(DEPDIR)/kal-offset.Tpo -c -o kal-offset.o `test -f 'offset.cc' || echo '$(srcdir)/'`offset.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-offset.Tpo $(DEPDIR)/kal-offset.Po
#	$(AM_V_CXX)source='offset.cc' object='kal-offset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-offset.o `test -f 'offset.cc' || echo '$(srcdir)/'`offset.cc

kal-offset.obj: offset.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-offset.obj -MD -MP -MF $(DEPDIR)/kal-offset.Tpo -c -o kal-offset.obj `if test -f 'offset.cc'; then $(CYGPATH_W) 'offset.cc'; else $(CYGPATH_W) '$(srcdir)/offset.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-offset.Tpo $(DEPDIR)/kal-offset.Po
#	$(AM_V_CXX)source='offset.cc' object='kal-offset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-offset.obj `if test -f 'offset.cc'; then $(CYGPATH_W) 'offset.cc'; else $(CYGPATH_W) '$(srcdir)/offset.cc'; fi`

kal-bladeRF_source.o: bladeRF_source.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-bladeRF_source.o -MD -MP -MF $(DEPDIR)/kal-bladeRF_source.Tpo -c -o kal-bladeRF_source.o `test -f 'bladeRF_source.cc' || echo '$(srcdir)/'`bladeRF_source.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-bladeRF_source.Tpo $(DEPDIR)/kal-bladeRF_source.Po
#	$(AM_V_CXX)source='bladeRF_source.cc' object='kal-bladeRF_source.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-bladeRF_source.o `test -f 'bladeRF_source.cc' || echo '$(srcdir)/'`bladeRF_source.cc

kal-bladeRF_source.obj: bladeRF_source.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-bladeRF_source.obj -MD -MP -MF $(DEPDIR)/kal-bladeRF_source.Tpo -c -o kal-bladeRF_source.obj `if test -f 'bladeRF_source.cc'; then $(CYGPATH_W) 'bladeRF_source.cc'; else $(CYGPATH_W) '$(srcdir)/bladeRF_source.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-bladeRF_source.Tpo $(DEPDIR)/kal-bladeRF_source.Po
#	$(AM_V_CXX)source='bladeRF_source.cc' object='kal-bladeRF_source.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-bladeRF_source.obj `if test -f 'bladeRF_source.cc'; then $(CYGPATH_W) 'bladeRF_source.cc'; else $(CYGPATH_W) '$(srcdir)/bladeRF_source.cc'; fi`

kal-util.o: util.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-util.o -MD -MP -MF $(DEPDIR)/kal-util.Tpo -c -o kal-util.o `test -f 'util.cc' || echo '$(srcdir)/'`util.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-util.Tpo $(DEPDIR)/kal-util.Po
#	$(AM_V_CXX)source='util.cc' object='kal-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-util.o `test -f 'util.cc' || echo '$(srcdir)/'`util.cc

kal-util.obj: util.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -MT kal-util.obj -MD -MP -MF $(DEPDIR)/kal-util.Tpo -c -o kal-util.obj `if test -f 'util.cc'; then $(CYGPATH_W) 'util.cc'; else $(CYGPATH_W) '$(srcdir)/util.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kal-util.Tpo $(DEPDIR)/kal-util.Po
#	$(AM_V_CXX)source='util.cc' object='kal-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kal_CXXFLAGS) $(CXXFLAGS) -c -o kal-util.obj `if test -f 'util.cc'; then $(CYGPATH_W) 'util.cc'; else $(CYGPATH_W) '$(srcdir)/util.cc'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
